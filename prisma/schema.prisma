// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  userId    Int       @id             @default(autoincrement()) @map("userId")
  userName  String                    @map("userName")
  email     String    @unique         @map("email")
  password  String                    @map("password")
  authCode  String                    @map("authCode")
  createdAt DateTime  @default(now()) @map("createAt")
  updatedAt DateTime  @updatedAt      @map("updatedAt")

  refreshTokens  RefreshTokens[] 
  resumes       Resumes[]
  @@map("Users")
}

model Resumes {
  resumeId    Int       @id @default(autoincrement()) @map("resumeId")
  userId      Int       @map("userId")
  title       String    @map("title")
  contents    String    @map("contents") @db.Text
  statusCode  String    @default("APPLY") @map("statusCode")
  createdAt   DateTime  @default(now()) @map("createAt")
  updatedAt   DateTime  @updatedAt      @map("updatedAt")

  user        Users     @relation(fields: [userId], references: [userId],  onDelete: Cascade)

  @@map("Resumes")
}

model userAuths {
  authCode  String    @id @unique     @map("authCode")
  authName  String    @unique         @map("authName")
  authLv    Int       @unique         @map("Int")
  createdAt DateTime  @default(now()) @map("createAt")
  updatedAt DateTime  @updatedAt      @map("updatedAt")

  @@map("userAuths")
}

model resumeStatus {
  statusCode  String    @id @unique     @map("statusCode")
  statusName  String    @unique         @map("statusName")
  createdAt   DateTime  @default(now()) @map("createAt")
  updatedAt   DateTime  @updatedAt      @map("updatedAt")

  @@map("resumeStatus")
}

model RefreshTokens {
  id         Int      @id @default(autoincrement())
  userId     Int      @unique
  token      String   @unique
  expiresAt  DateTime
  createdAt  DateTime @default(now())

  user Users @relation(fields: [userId], references: [userId], onDelete: Cascade)

  @@map("RefreshTokens")
}